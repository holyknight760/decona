#conda 환경을 docker 이미지로 저장하는 방법

1. **Conda 환경 내보내기**: Conda 환경의 모든 패키지를 YAML 파일로 내보내는 명령어입니다².

   ```bash
   conda env export > environment.yml
   ```

   또는, 특정 패키지만 내보내려면 `--from-history` 플래그를 사용할 수 있습니다².

   ```bash
   conda env export --from-history > environment.yml
   ```

2. **Dockerfile 생성**: Docker 이미지를 만들기 위해 Dockerfile을 작성해야 합니다². 여기서는 Nvidia의 cuda-base 베이스 이미지를 사용하였습니다².

   ```Dockerfile
   FROM nvidia/cuda:10.2-base-ubuntu18.04

   # miniconda 설치
   ENV PATH $CONDA_DIR/bin:$PATH
   RUN wget --quiet https://repo.continuum.io/miniconda/Miniconda$CONDA_PYTHON_VERSION-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \\
       echo 'export PATH=$CONDA_DIR/bin:$PATH' > /etc/profile.d/conda.sh && \\
       /bin/bash /tmp/miniconda.sh -b -p $CONDA_DIR && \\
       rm -rf /tmp/*

   # mamba 설치 (Conda 속도 향상)
   RUN conda install -y mamba -c conda-forge

   # YAML 파일을 Docker 이미지에 복사하고, base/root Conda 환경을 업데이트
   ADD ./environment.yml .
   RUN mamba env update --file ./environment.yml &&\\
       conda clean -tipy
   ```

3. **Docker 이미지 빌드**: Dockerfile이 있는 디렉토리에서 다음 명령어를 실행하여 Docker 이미지를 빌드합니다.
   ```bash
   docker build -t your-image-name .
   ```

이제 Docker 이미지가 생성되었으며, 이 이미지는 Conda 환경을 정확하게 복제합니다². 이 Docker 이미지를 사용하면 코드와 모델을 문제없이 실행할 수 있습니다².

#Docker 이미지를 실행하는 방법은 무엇인가요?
Docker 이미지를 실행하는 방법은 다음과 같습니다:

1. **Docker 이미지 목록 확인**: Docker 이미지를 확인하려면 다음 명령어를 사용합니다¹.
   ```bash
   docker images
   ```
2. **Docker 이미지 실행**: Docker 이미지를 실행하려면 다음 명령어를 사용합니다¹.
   ```bash
   docker run image_name:tag_name
   ```
   여기서 `image_name`은 실행하려는 Docker 이미지의 이름이고, `tag_name`은 해당 이미지의 태그입니다¹. 태그를 지정하지 않으면 자동으로 'latest' 태그가 사용됩니다¹.

또한, Docker 이미지를 백그라운드에서 실행하려면 `-d` 옵션을 사용하고, 터미널을 통해 상호 작용하려면 `-i` 옵션을 사용할 수 있습니다¹. 예를 들어, 다음과 같이 사용할 수 있습니다¹.

```bash
docker run -d image_name:tag_name
docker run -i image_name:tag_name
```

이제 Docker 이미지가 컨테이너로 실행되며, 이 컨테이너를 통해 애플리케이션을 실행할 수 있습니다¹.
